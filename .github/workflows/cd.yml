name: Publish Python distribution to TestPyPI

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Pixi
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v0.46.0
          cache: true
      - name: Run tests
        run: pixi run test
      - name: Run lint and format
        run: pixi run pre-commit-all-files
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:
    - name: Build a binary wheel and a source tarball
      run: pixi run hatch build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/mammos-mumag
    permissions:
      id-token: write # mandatory for trusted publishing
    steps:
    - name: Download the artifact
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: gh-action-pypi-publish@release/v1
      with:
          repository-url: https://test.pypi.org/legacy/
