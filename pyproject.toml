[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "mammos-mmag"
version = "0.1.0"
description = "Finite element micromagnetic simulation tool."
readme = "README.md"
authors = [
  { name = "Thomas Schrefl" },
  { name = "Swapneel Amit Pathak" },
  { name = "Andrea Petrocchi" },
  { name = "Samuel Holt" },
  { name = "Martin Lang" },
  { name = "Hans Fangohr" },
]
license = { file = "LICENSE" }

classifiers = [
  'Programming Language :: Python',
  'Programming Language :: Python :: 3',
  'Intended Audience :: Science/Research',
  'License :: OSI Approved :: BSD License',
  'Operating System :: POSIX',
  'Operating System :: Microsoft :: Windows',
  'Topic :: Scientific/Engineering :: Physics',
]

requires-python = ">=3.8"

dependencies = [
  "jax",
  "jinja2 >=3.1.6,<4",
  "meshio",
  "numpy",
  "psutil >=7",
  "pydantic",
  "pyyaml >6",
]

[project.optional-dependencies]
format = [
  "ruff==0.8",
]
docs = [
  "ipykernel",
  "nbsphinx",
  "sphinx==8.1.3",
  "sphinx-rtd-theme==3.0.1",
  "numpy",
]
examples = [
  "jupyter",
  "polars ",
]
test = [
  "polars",
  "pytest",
]

# pixi
[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
cuda = { version=">=12.8.0,<13", channel="nvidia" }
esys-escript = ">=5.10,<6"

[tool.pixi.pypi-dependencies]
mammos_mmag = { path = ".", editable = true }

[tool.pixi.environments]
ruff = { features = ["format"], solve-group = "default" }
sphinx = { features = ["docs"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }
examples = { features = ["examples"], solve-group = "default" }

[tool.pixi.feature.format.tasks]
lint = "ruff check"
format = "ruff format"
clean = "ruff clean && py3clean ."

[tool.pixi.feature.docs.tasks]
docs = "cd docs && make html"
docs-clean = "cd docs && make clean"

[tool.pixi.feature.test.tasks]
test = "pytest -v"

[tool.pixi.feature.examples.tasks]
examples = "jupyter-lab docs/source/notebooks/"

[tool.ruff]
target-version = "py39"
line-length = 88
indent-width = 4
respect-gitignore = true
exclude = [
  "src/mammos_mmag/scripts/*.py", # scripts
  "examples", # to be checked
]

[tool.ruff.lint.per-file-ignores]
"src/mammos_mmag/tofly.py" = [
  "D101", # undocumented-public-class
  "D103", # undocumented-public-function
]

[tool.ruff.lint]
# Ruff default rules, pydocstyle, and pycodestyle warnings
select = ["D", "E4", "E7", "E9", "F", "W"]
ignore = []

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
quote-style = "double"
